<snippet>
	<content><![CDATA[
// Implementation of https://codeforces.com/blog/entry/92183
// O(n * log(n)^2)
// Requires convolve_subset
template<class T, int SZ = 20>
vector<T> logarithm_set_power_series(const vector<T> &p){
	int n = (int)p.size();
	assert(__builtin_popcount(n) == 1 && p[0] == 1);
	int w = __lg(n);
	vector<vector<T>> res(w + 1, {0});
	T fact = 1;
	for(auto bit = 1; bit <= w; ++ bit) res[bit][0] = fact, fact *= -bit;
	for(auto bit = 0; bit < w; ++ bit){
		for(auto i = 0; i < w - bit; ++ i){
			auto shift = convolve_subset<T, SZ>(res[i + 1], vector<T>(p.begin() + (1 << bit), p.begin() + (1 << bit + 1)));
			res[i].insert(res[i].end(), shift.begin(), shift.end());
		}
		res.pop_back();
	}
	return res[0];
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>logarithm_set_power_series</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
