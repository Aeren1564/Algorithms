<snippet>
	<content><![CDATA[
// Returns the minimum x > 0 with a^x = b
// O(sqrt(mod)) applications of hash map
// T must be of modular type
// Requires modular
template<class T>
optional<int> mod_log(T a, T b){
	int m = T::mod(), n = sqrt(m) + 1, j = 1;
	T e = 1, f = 1;
	unordered_map<int, T> A;
	while(j <= n && (f = e *= a) != b) A[e * b] = j ++;
	if(e == b) return j;
	if(gcd(m, e.data) == gcd(m, b.data)) for(auto i = 2; i < n + 2; ++ i) if(A.count(e *= f)) return T(n) * i - A[e];
	return {};
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>mod_log</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
