<snippet>
	<content><![CDATA[
// Assumes there exists p, q in [low, high] such that
// f is decreasing in [low, p],
// f is constant in [p, q]
// f is increasing in [q, high]
// Returns a point in [p , q]
// O(repeat) f() calls
template<class Compare = less<>>
double golden_section_search(double low, double high, int repeat, auto f, Compare cmp = less<>()){
	assert(low < high);
	double phi = (sqrt(5) - 1) / 2, mid1 = high - (high - low) * phi, mid2 = low + (high - low) * phi;
	auto val1 = f(mid1), val2 = f(mid2);
	while(repeat --){
		if(cmp(val1, val2)){
			high = mid2, mid2 = mid1, val2 = val1;
			mid1 = high - (high - low) * phi, val1 = f(mid1);
		}
		else{
			low = mid1, mid1 = mid2, val1 = val2;
			mid2 = low + (high - low) * phi, val2 = f(mid2);
		}
	}
	return (low + high) / 2;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>golden_section_search</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
