<snippet>
	<content><![CDATA[
// Iterate over all [l, r] such that 1 <= l <= r <= n and it is the maximal interval with equal q=n/x, and call f(l, r, q)
// O(sqrt(n)) f() calls
// in_order = false: sqrt(n) divisions, traverses in arbitrary order
// in_order = true: 4*sqrt(n) divisions, traverses in increasing order
template<class T>
void harmonic_loop(T n, auto f, bool in_order = false){
	if(in_order) for(T l = 1, r, q; l <= n; l = r + 1){
		q = n / l;
		r = n / q;
		f(l, r, q);
	}
	else for(T x = 1, y, py; x * x <= n; ++ x){
		y = n / x;
		f(x, x, y);
		if(x >= 2) f(y + 1, py, x - 1);
		if(x != y && x * x < n && (x + 1) * (x + 1) > n) f(x + 1, y, x);
		py = y;
	}
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>harmonic_loop</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
