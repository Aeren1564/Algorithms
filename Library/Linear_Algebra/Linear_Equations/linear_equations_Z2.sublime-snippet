<snippet>
	<content><![CDATA[
template<size_t B>
optional<bitset<B>> linear_equations_Z2(vector<bitset<B>> A, vector<int> b, int m){
	int n = (int)size(A), rank = 0;
	assert((int)size(b) == n);
	vector<int> pivot(n);
	for(auto id = 0; id < n; ++ id){
		auto &u = A[id];
		for(auto i = 0; i < rank; ++ i) if(u[pivot[i]]) u ^= A[i], b[id] ^= b[i];
		if(auto p = u._Find_first(); p < B){
			A[rank] = u;
			b[rank] = b[id];
			pivot[rank] = p;
			auto pos = lower_bound(begin(pivot), begin(pivot) + rank, p) - begin(pivot);
			rotate(begin(A) + pos, begin(A) + rank, begin(A) + rank + 1);
			rotate(begin(b) + pos, begin(b) + rank, begin(b) + rank + 1);
			rotate(begin(pivot) + pos, begin(pivot) + rank, begin(pivot) + rank + 1);
			++ rank;
		}
		else if(b[id]) return {};
	}
	bitset<B> res;
	for(auto i = rank - 1; i >= 0; -- i) if(b[i]){
		res.set(pivot[i]);
		for(auto j = 0; j < i; ++ j) if(A[j][pivot[i]]) b[j] ^= 1;
	}
	return res;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>linear_equations_Z2</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
